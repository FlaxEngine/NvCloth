NvCloth Release notes.

***************************
Release Notes 
***************************

1.1.6.lumberyard_1
===========================================================================================
Lumberyard changes MR#58 Contributed by moraaar

- Added support to build both share & static libraries on all platforms (pc, mac, ios, android, linux)
    + Modified cmake files to be able to choose between static or dynamic libraries
    + Predefined NvCloth API macros when building staticly so it doesn't include any export/import code.
- Fixed linking error on iOS as it didn't include any implementation for Atomics (using unix version as Mac does)
- Fixed Windows cmake bug when choosing between /MT and /MD.
- Fixed linking error when NEON is enabled caused by compiling SwCollision.cpp, SwSelfCollision.cpp and SwSolverKernel.cpp content twice.
- Enabled NEON SIMD instructions on all platforms that supports it:
    + Modified NEON code to be platform agnostic using macros, not Android only.
    + Enbled NEON instructions on iOS
    + Modified Android cmake files to use the right macros depending on ABI being built.
- Fixed compilation error when client app uses NvCloth library and the app compiles with Visual Studio 2019.
    + Microsoft removed <typeinfo.h> from VS2019 16.3 and that header is used by NvCloth library. Fixed nVidia's NvCloth library to use <typeinfo> instead from that version.
- Fixed unstable cloth simulation on Android (armv8).
    + Cloth particles during simulation were very unstable on Android (armv8), their location gets out of control really quickly with very unpredictable behaviour. After many attempts to find the source of the problem debugging the library, the solution came by adding the flag "-ffast-math" in the compilation of the library for Android (armv8).

1.1.6
===========================================================================================
Compatible platforms:

* Windows (CPU, CUDA, DX11)
* Mac (tested on Sierra)
* Linux (tested on Ubuntu 16.04.1 LTS x64)
* PlayStation 4 with PS4 SDK 6.5
* Xbox one (CPU, DX11)
* Android (arm64-v8a, API >= 21), tested on Shield TV
* Switch (SDK 8.0.0)

Compatible compilers (via cmake 3.7)

* Windows: Visual Studio 12, 14 (2013, 2015)
* Linux: gcc 5.4 (only x64)
* Mac: XCode 10.1 
* iOS: tested with XCode 10.1 (Apple LLVM)
* PlayStation 4: Visual studio 14 (2015)
* Xbox one: Visual studio 14 (2015)
* Android: NDK r15c
* Switch: Visual studio 14 (2015)


Fixed:

- Now compatible with the same PxShared version as PhysX 4.0

New:
- New setPlanes and setSpheres API.

Known issues:
- None

1.1.5
===========================================================================================

Fixed:

- Wind simulation code could affect particle masses (especially when high drag/lift coefficients were used)
- Fixed PS4 mising override error.
- Fix setCapsules bug.

New:
- Authoring library (helper functions useful for authoring tools)

Known issues:
- None

1.1.4
===========================================================================================
Fixed:

- DirectX 11 solver had issues with ccd sphere/capsule collision.
- Fixed sphere collision detection issue when clothing AABB is (almost) completely flat.
- Fix virtual particle collision issue on cuda (static particles could be moved)
- Enabled namespace in simd library, fixed runtime issues on switch when linking with APEX or PhysX.


New:

- Removed old cuda architectures that are not supported anymore
- Added improved teleportation API, rotation support and better support for teleporting while moving
- Virtual particle collision detection is now implemented in DX11 as well (DX11 was the only solver lacking it)


Known issues:
- None

1.1.3
===========================================================================================
Fixed:

- Incorrect assertion in ClothImpl::setFluidDensity.
- Make the simulation with MultithreadedSolverHelper work when no cloth present in the solver.
- Correct number of simulation chunks calculation for DX11/CUDA solvers when no cloths were added to the solver.
- Cuda wind simulation crashed on older hardware.
- Internal simd library now lives inside the nv::cloth namespace to avoid issues when statically linked with PhysX.


New:

- Introduce addCloths() method for all the solvers, which allows to perform a fast batch addition of multiple cloths.
- Cuda support on linux (experimental)
- Android support


Known issues:
- DirectX 11 solver has issues with ccd sphere/capsule collision.


1.1.2
===========================================================================================
Fixed:

- Dynamic allocations at runtime removed from MovingAverage.
- Possible error when starting samples due to gpu incompatible with dx debug mode.


New:

- Added cmake flags to disable dx11 and/or cuda support.


Known issues:
- DirectX 11 solver has issues with ccd sphere/capsule collision.


1.1.1
===========================================================================================
Fixed:

- Air drag/lift did react to flow speed only linearly, model was changed to be more physically correct.
- Fixed issue where scaling units would result in different air drag/lift behavior (by adding fluid density parameter).
- Fixed "unused typedef `__t100`" warning in xcode.


Known issues:
- DirectX 11 solver has issues with ccd sphere/capsule collision.


1.1.0
===========================================================================================
Fixed:

- DirectX 11 solver now supports triangle collision shapes and air drag/lift.
- Fixed bug where changing friction on cloth already in simulation would cause assert or crash.
- Optimization flag now working on PS4 release build.


New:

- Solver::getNumCloths and Solver::getClothList interface.
- Improved samples (new scenes and debug visualization)


Known issues:
- DirectX 11 solver has issues with ccd sphere/capsule collision.

1.0.0
===========================================================================================
Known issues:
- DirectX 11 solver doesn't support triangle collision shapes and air drag/lift
